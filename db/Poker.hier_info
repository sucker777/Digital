|Poker
DE0 <= SegController:inst1.de0
CLOCK => SegController:inst1.clk
CLOCK => Poker_Controller:inst.clk
CLOCK => led88_2:inst4.clk
Switch => Poker_Controller:inst.Switch
P1_Roll => Poker_Controller:inst.P1_Roll
P2_Roll => Poker_Controller:inst.P2_Roll
P1_Race => Poker_Controller:inst.P1_Race
P2_Race => Poker_Controller:inst.P2_Race
DE1 <= SegController:inst1.de1
DE2 <= SegController:inst1.de2
a <= GRcount[0].DB_MAX_OUTPUT_PORT_TYPE
b <= GRcount[1].DB_MAX_OUTPUT_PORT_TYPE
c <= GRcount[2].DB_MAX_OUTPUT_PORT_TYPE
d <= GRcount[3].DB_MAX_OUTPUT_PORT_TYPE
e <= GRcount[4].DB_MAX_OUTPUT_PORT_TYPE
f <= GRcount[5].DB_MAX_OUTPUT_PORT_TYPE
g <= GRcount[6].DB_MAX_OUTPUT_PORT_TYPE


|Poker|SegController:inst1
de0 <= seg:inst2.de[0]
clk => seg:inst2.CLK
clk => Decimal:inst.clk
clk => Decimal:inst1.clk
counter0 => Decimal:inst.counter[3]
counter1 => Decimal:inst.counter[2]
counter2 => Decimal:inst.counter[1]
counter3 => Decimal:inst.counter[0]
random0 => Decimal:inst1.counter[3]
random1 => Decimal:inst1.counter[2]
random2 => Decimal:inst1.counter[1]
random3 => Decimal:inst1.counter[0]
p1_0 => seg:inst2.c[0]
p1_1 => seg:inst2.c[1]
p2_0 => seg:inst2.d[0]
p2_1 => seg:inst2.d[1]
de1 <= seg:inst2.de[1]
de2 <= seg:inst2.de[2]
a <= number[0].DB_MAX_OUTPUT_PORT_TYPE
b <= number[1].DB_MAX_OUTPUT_PORT_TYPE
c <= number[2].DB_MAX_OUTPUT_PORT_TYPE
d <= number[3].DB_MAX_OUTPUT_PORT_TYPE
e <= number[4].DB_MAX_OUTPUT_PORT_TYPE
f <= number[5].DB_MAX_OUTPUT_PORT_TYPE
g <= number[6].DB_MAX_OUTPUT_PORT_TYPE


|Poker|SegController:inst1|seg:inst2
CLK => op[2].CLK
CLK => op[1].CLK
CLK => op[0].CLK
a => Mux27.IN0
a => Mux18.IN0
a => Mux5.IN0
a => Mux14.IN1
b[3] => Mux15.IN19
b[3] => Mux6.IN19
b[3] => Mux3.IN19
b[3] => Mux20.IN19
b[3] => Mux23.IN19
b[3] => Mux26.IN19
b[3] => Mux30.IN19
b[3] => Mux31.IN19
b[2] => Mux15.IN18
b[2] => Mux6.IN18
b[2] => Mux3.IN18
b[2] => Mux20.IN18
b[2] => Mux23.IN18
b[2] => Mux26.IN18
b[2] => Mux30.IN18
b[2] => Mux31.IN18
b[1] => Mux15.IN17
b[1] => Mux6.IN17
b[1] => Mux3.IN17
b[1] => Mux20.IN17
b[1] => Mux23.IN17
b[1] => Mux26.IN17
b[1] => Mux30.IN17
b[1] => Mux31.IN17
b[0] => Mux15.IN16
b[0] => Mux6.IN16
b[0] => Mux3.IN16
b[0] => Mux20.IN16
b[0] => Mux23.IN16
b[0] => Mux26.IN16
b[0] => Mux30.IN16
b[0] => Mux31.IN16
c[1] => Mux8.IN5
c[1] => Mux9.IN5
c[1] => Mux10.IN5
c[1] => Mux5.IN1
c[0] => Mux8.IN4
c[0] => Mux9.IN4
c[0] => Mux10.IN4
c[0] => Mux17.IN6
d[1] => Mux11.IN5
d[1] => Mux12.IN5
d[1] => Mux13.IN5
d[1] => Mux5.IN2
d[0] => Mux11.IN4
d[0] => Mux12.IN4
d[0] => Mux13.IN4
d[0] => Mux17.IN7
e => Mux27.IN3
e => Mux18.IN3
e => Mux5.IN3
e => Mux14.IN4
f[3] => Mux16.IN19
f[3] => Mux7.IN19
f[3] => Mux4.IN19
f[3] => Mux19.IN19
f[3] => Mux22.IN19
f[3] => Mux25.IN19
f[3] => Mux28.IN19
f[3] => Mux29.IN19
f[2] => Mux16.IN18
f[2] => Mux7.IN18
f[2] => Mux4.IN18
f[2] => Mux19.IN18
f[2] => Mux22.IN18
f[2] => Mux25.IN18
f[2] => Mux28.IN18
f[2] => Mux29.IN18
f[1] => Mux16.IN17
f[1] => Mux7.IN17
f[1] => Mux4.IN17
f[1] => Mux19.IN17
f[1] => Mux22.IN17
f[1] => Mux25.IN17
f[1] => Mux28.IN17
f[1] => Mux29.IN17
f[0] => Mux16.IN16
f[0] => Mux7.IN16
f[0] => Mux4.IN16
f[0] => Mux19.IN16
f[0] => Mux22.IN16
f[0] => Mux25.IN16
f[0] => Mux28.IN16
f[0] => Mux29.IN16
de[2] <= de[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
de[1] <= de[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
de[0] <= de[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
number[6] <= temp[6].DB_MAX_OUTPUT_PORT_TYPE
number[5] <= temp[5].DB_MAX_OUTPUT_PORT_TYPE
number[4] <= temp[4].DB_MAX_OUTPUT_PORT_TYPE
number[3] <= temp[3].DB_MAX_OUTPUT_PORT_TYPE
number[2] <= temp[2].DB_MAX_OUTPUT_PORT_TYPE
number[1] <= temp[1].DB_MAX_OUTPUT_PORT_TYPE
number[0] <= temp[0].DB_MAX_OUTPUT_PORT_TYPE


|Poker|SegController:inst1|Decimal:inst
clk => digit[0]~reg0.CLK
clk => digit[1]~reg0.CLK
clk => digit[2]~reg0.CLK
clk => digit[3]~reg0.CLK
clk => decimal~reg0.CLK
counter[0] => Mux4.IN7
counter[0] => Mux4.IN8
counter[0] => Mux4.IN9
counter[0] => Mux4.IN10
counter[0] => Mux4.IN11
counter[0] => Mux4.IN12
counter[0] => Mux4.IN13
counter[0] => Mux4.IN14
counter[0] => Mux4.IN15
counter[0] => Mux4.IN16
counter[0] => Mux4.IN17
counter[0] => Mux4.IN18
counter[0] => Mux4.IN19
counter[1] => Mux0.IN10
counter[1] => Mux1.IN10
counter[1] => Mux2.IN10
counter[1] => Mux3.IN4
counter[1] => Mux3.IN5
counter[1] => Mux3.IN6
counter[1] => Mux3.IN7
counter[1] => Mux3.IN8
counter[1] => Mux3.IN9
counter[1] => Mux3.IN10
counter[1] => Mux4.IN6
counter[2] => Mux0.IN9
counter[2] => Mux1.IN9
counter[2] => Mux2.IN3
counter[2] => Mux2.IN4
counter[2] => Mux2.IN5
counter[2] => Mux2.IN6
counter[2] => Mux2.IN7
counter[2] => Mux2.IN8
counter[2] => Mux2.IN9
counter[2] => Mux3.IN3
counter[2] => Mux4.IN5
counter[3] => Mux0.IN8
counter[3] => Mux1.IN2
counter[3] => Mux1.IN3
counter[3] => Mux1.IN4
counter[3] => Mux1.IN5
counter[3] => Mux1.IN6
counter[3] => Mux1.IN7
counter[3] => Mux1.IN8
counter[3] => Mux2.IN2
counter[3] => Mux3.IN2
counter[3] => Mux4.IN4
decimal <= decimal~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[0] <= digit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[1] <= digit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[2] <= digit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[3] <= digit[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Poker|SegController:inst1|Decimal:inst1
clk => digit[0]~reg0.CLK
clk => digit[1]~reg0.CLK
clk => digit[2]~reg0.CLK
clk => digit[3]~reg0.CLK
clk => decimal~reg0.CLK
counter[0] => Mux4.IN7
counter[0] => Mux4.IN8
counter[0] => Mux4.IN9
counter[0] => Mux4.IN10
counter[0] => Mux4.IN11
counter[0] => Mux4.IN12
counter[0] => Mux4.IN13
counter[0] => Mux4.IN14
counter[0] => Mux4.IN15
counter[0] => Mux4.IN16
counter[0] => Mux4.IN17
counter[0] => Mux4.IN18
counter[0] => Mux4.IN19
counter[1] => Mux0.IN10
counter[1] => Mux1.IN10
counter[1] => Mux2.IN10
counter[1] => Mux3.IN4
counter[1] => Mux3.IN5
counter[1] => Mux3.IN6
counter[1] => Mux3.IN7
counter[1] => Mux3.IN8
counter[1] => Mux3.IN9
counter[1] => Mux3.IN10
counter[1] => Mux4.IN6
counter[2] => Mux0.IN9
counter[2] => Mux1.IN9
counter[2] => Mux2.IN3
counter[2] => Mux2.IN4
counter[2] => Mux2.IN5
counter[2] => Mux2.IN6
counter[2] => Mux2.IN7
counter[2] => Mux2.IN8
counter[2] => Mux2.IN9
counter[2] => Mux3.IN3
counter[2] => Mux4.IN5
counter[3] => Mux0.IN8
counter[3] => Mux1.IN2
counter[3] => Mux1.IN3
counter[3] => Mux1.IN4
counter[3] => Mux1.IN5
counter[3] => Mux1.IN6
counter[3] => Mux1.IN7
counter[3] => Mux1.IN8
counter[3] => Mux2.IN2
counter[3] => Mux3.IN2
counter[3] => Mux4.IN4
decimal <= decimal~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[0] <= digit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[1] <= digit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[2] <= digit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[3] <= digit[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Poker|Poker_Controller:inst
clk => current_player[0].CLK
clk => current_player[1].CLK
clk => current_player[2].CLK
clk => current_player[3].CLK
clk => current_player[4].CLK
clk => current_player[5].CLK
clk => current_player[6].CLK
clk => current_player[7].CLK
clk => current_player[8].CLK
clk => current_player[9].CLK
clk => current_player[10].CLK
clk => current_player[11].CLK
clk => current_player[12].CLK
clk => current_player[13].CLK
clk => current_player[14].CLK
clk => current_player[15].CLK
clk => current_player[16].CLK
clk => current_player[17].CLK
clk => current_player[18].CLK
clk => current_player[19].CLK
clk => current_player[20].CLK
clk => current_player[21].CLK
clk => current_player[22].CLK
clk => current_player[23].CLK
clk => current_player[24].CLK
clk => current_player[25].CLK
clk => current_player[26].CLK
clk => current_player[27].CLK
clk => current_player[28].CLK
clk => current_player[29].CLK
clk => current_player[30].CLK
clk => current_player[31].CLK
clk => random_number[3].CLK
clk => random_number[2].CLK
clk => random_number[1].CLK
clk => random_number[0].CLK
clk => Random_Seg[3]~reg0.CLK
clk => Random_Seg[2]~reg0.CLK
clk => Random_Seg[1]~reg0.CLK
clk => Random_Seg[0]~reg0.CLK
clk => p2_score[1].CLK
clk => p2_score[0].CLK
clk => p1_score[1].CLK
clk => p1_score[0].CLK
clk => current_state[0].CLK
clk => current_state[1].CLK
clk => current_state[2].CLK
clk => current_state[3].CLK
clk => current_state[4].CLK
clk => current_state[5].CLK
clk => current_state[6].CLK
clk => current_state[7].CLK
clk => current_state[8].CLK
clk => current_state[9].CLK
clk => current_state[10].CLK
clk => current_state[11].CLK
clk => current_state[12].CLK
clk => current_state[13].CLK
clk => current_state[14].CLK
clk => current_state[15].CLK
clk => current_state[16].CLK
clk => current_state[17].CLK
clk => current_state[18].CLK
clk => current_state[19].CLK
clk => current_state[20].CLK
clk => current_state[21].CLK
clk => current_state[22].CLK
clk => current_state[23].CLK
clk => current_state[24].CLK
clk => current_state[25].CLK
clk => current_state[26].CLK
clk => current_state[27].CLK
clk => current_state[28].CLK
clk => current_state[29].CLK
clk => current_state[30].CLK
clk => current_state[31].CLK
clk => current_number[3].CLK
clk => current_number[2].CLK
clk => current_number[1].CLK
clk => current_number[0].CLK
clk => temp[3].CLK
clk => temp[2].CLK
clk => temp[1].CLK
clk => temp[0].CLK
Switch => process_1.IN1
Switch => process_1.IN1
Switch => current_number.OUTPUTSELECT
Switch => current_number.OUTPUTSELECT
Switch => current_number.OUTPUTSELECT
Switch => current_number.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => current_state.OUTPUTSELECT
Switch => p1_score.OUTPUTSELECT
Switch => p1_score.OUTPUTSELECT
Switch => p2_score.OUTPUTSELECT
Switch => p2_score.OUTPUTSELECT
Switch => temp[3].ENA
Switch => temp[2].ENA
Switch => temp[1].ENA
Switch => temp[0].ENA
P1_Roll => process_1.IN1
P2_Roll => process_1.IN1
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_player.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => current_state.OUTPUTSELECT
P1_Race => p1_score.OUTPUTSELECT
P1_Race => p1_score.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_player.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => current_state.OUTPUTSELECT
P2_Race => p2_score.OUTPUTSELECT
P2_Race => p2_score.OUTPUTSELECT
Current_Seg[3] <= current_number[3].DB_MAX_OUTPUT_PORT_TYPE
Current_Seg[2] <= current_number[2].DB_MAX_OUTPUT_PORT_TYPE
Current_Seg[1] <= current_number[1].DB_MAX_OUTPUT_PORT_TYPE
Current_Seg[0] <= current_number[0].DB_MAX_OUTPUT_PORT_TYPE
P1Score_Seg[1] <= p1_score[1].DB_MAX_OUTPUT_PORT_TYPE
P1Score_Seg[0] <= p1_score[0].DB_MAX_OUTPUT_PORT_TYPE
P2Score_Seg[1] <= p2_score[1].DB_MAX_OUTPUT_PORT_TYPE
P2Score_Seg[0] <= p2_score[0].DB_MAX_OUTPUT_PORT_TYPE
Random_Seg[3] <= Random_Seg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Random_Seg[2] <= Random_Seg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Random_Seg[1] <= Random_Seg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Random_Seg[0] <= Random_Seg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Poker|led88_2:inst4
clk => frame_counter[0].CLK
clk => frame_counter[1].CLK
clk => frame_counter[2].CLK
clk => frame_counter[3].CLK
clk => frame_counter[4].CLK
clk => frame_counter[5].CLK
clk => frame_counter[6].CLK
clk => frame_counter[7].CLK
clk => frame_counter[8].CLK
clk => frame_counter[9].CLK
clk => frame_counter[10].CLK
clk => frame_counter[11].CLK
clk => frame_counter[12].CLK
clk => frame_counter[13].CLK
clk => frame_counter[14].CLK
clk => frame_counter[15].CLK
clk => frame_counter[16].CLK
clk => frame_counter[17].CLK
clk => frame_counter[18].CLK
clk => frame_counter[19].CLK
clk => frame_counter[20].CLK
clk => frame_counter[21].CLK
clk => frame_counter[22].CLK
clk => frame_counter[23].CLK
clk => frame_counter[24].CLK
clk => frame_counter[25].CLK
clk => frame_counter[26].CLK
clk => frame_counter[27].CLK
clk => frame_counter[28].CLK
clk => frame_counter[29].CLK
clk => frame_counter[30].CLK
clk => frame_counter[31].CLK
clk => row_counter[2].CLK
clk => row_counter[1].CLK
clk => row_counter[0].CLK
GRcount[6] => Equal2.IN6
GRcount[5] => Equal2.IN1
GRcount[4] => Equal2.IN0
GRcount[3] => Equal2.IN5
GRcount[2] => Equal2.IN4
GRcount[1] => Equal2.IN3
GRcount[0] => Equal2.IN2
DE[2] => Equal1.IN1
DE[2] => Equal3.IN2
DE[1] => Equal1.IN2
DE[1] => Equal3.IN1
DE[0] => Equal1.IN0
DE[0] => Equal3.IN0
row[7] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row[6] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row[5] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
Gcol[7] <= Selector7.DB_MAX_OUTPUT_PORT_TYPE
Gcol[6] <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
Gcol[5] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
Gcol[4] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
Gcol[3] <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
Gcol[2] <= Selector2.DB_MAX_OUTPUT_PORT_TYPE
Gcol[1] <= Selector1.DB_MAX_OUTPUT_PORT_TYPE
Gcol[0] <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
Rcol[7] <= Selector15.DB_MAX_OUTPUT_PORT_TYPE
Rcol[6] <= Selector14.DB_MAX_OUTPUT_PORT_TYPE
Rcol[5] <= Selector13.DB_MAX_OUTPUT_PORT_TYPE
Rcol[4] <= Selector12.DB_MAX_OUTPUT_PORT_TYPE
Rcol[3] <= Selector11.DB_MAX_OUTPUT_PORT_TYPE
Rcol[2] <= Selector10.DB_MAX_OUTPUT_PORT_TYPE
Rcol[1] <= Selector9.DB_MAX_OUTPUT_PORT_TYPE
Rcol[0] <= Selector8.DB_MAX_OUTPUT_PORT_TYPE


